
// import React, { useState } from 'react';
// import { View, Text, TextInput, Button, StyleSheet, ActivityIndicator } from 'react-native';
// import { useNavigation } from '@react-navigation/native';
// import { firebase } from '../../../config'; // Import your Firebase config

// const RegistrationForm = () => {
//   const [name, setName] = useState('');
//   const [contactNumber, setContactNumber] = useState('');
//   const [address, setAddress] = useState('');
//   const [plateNumber, setPlateNumber] = useState('');
//   const [isLoading, setIsLoading] = useState(false); // State variable to track loading state
//   const navigation = useNavigation();

//   const isFormEmpty = !name.trim() || !contactNumber.trim() || !address.trim() || !plateNumber.trim();

//   const generateQRCode = async () => {
//     if (!isFormEmpty) {
//       setIsLoading(true); // Set loading to true when registration starts

//       const data = {
//         name,
//         contactNumber,
//         address,
//         plateNumber,
//       };

//       try {
//         const driversCollectionRef = firebase.firestore().collection('Drivers');
//         const docRef = await driversCollectionRef.add({
//           ...data,
//           // No need to specify a qrCode field here
//         });

//         const qrData = {
//           ...data,
//           driverId: docRef.id, // Use the unique ID generated by Firestore
//         };

//         // Now, add the qrData to the 'Drivers' collection
//         await docRef.update({
//           qrCode: JSON.stringify(qrData), // Store qrData as a string in Firestore
//         });

//         navigation.navigate('DriverQR', { qrData });
//       } catch (error) {
//         console.error('Error adding document: ', error);
//       } finally {
//         setIsLoading(false);
//       }
//     }
//   };

//   return (
//     <View style={styles.container}>
//       <Text style={styles.label}>Name:</Text>
//       <TextInput
//         style={styles.input}
//         value={name}
//         onChangeText={setName}
//         placeholder="Enter your name"
//       />
//       <Text style={styles.label}>Contact Number:</Text>
//       <TextInput
//         style={styles.input}
//         value={contactNumber}
//         onChangeText={setContactNumber}
//         placeholder="Enter your contact number"
//       />
//       <Text style={styles.label}>Address:</Text>
//       <TextInput
//         style={styles.input}
//         value={address}
//         onChangeText={setAddress}
//         placeholder="Enter your address"
//       />
//       <Text style={styles.label}>Plate Number:</Text>
//       <TextInput
//         style={styles.input}
//         value={plateNumber}
//         onChangeText={setPlateNumber}
//         placeholder="Enter your plate number"
//       />
//       <Button title="Register!" onPress={generateQRCode} disabled={isFormEmpty || isLoading} />
//       {isLoading && <ActivityIndicator style={styles.loadingIndicator} size="large" color="#0000ff" />}
//     </View>
//   );
// };

// const styles = StyleSheet.create({
//   container: {
//     flex: 1,
//     padding: 20,
//   },
//   label: {
//     fontSize: 16,
//     marginBottom: 5,
//   },
//   input: {
//     height: 40,
//     borderColor: 'gray',
//     borderWidth: 1,
//     marginBottom: 10,
//     paddingHorizontal: 10,
//   },
//   loadingIndicator: {
//     marginTop: 10,
//   },
// });

// export default RegistrationForm;


//galing to sa kabilang file
import React, { useState } from 'react';
import { View, Text, TextInput, Button, StyleSheet, ActivityIndicator, BackHandler, Image, TouchableOpacity } from 'react-native';
import { useFocusEffect, useNavigation } from '@react-navigation/native';
import { firebase } from '../../../config'; // Import your Firebase config

const RegistrationForm = () => {
  const [name, setName] = useState('');
  const [contactNumber, setContactNumber] = useState('');
  const [address, setAddress] = useState('');
  const [plateNumber, setPlateNumber] = useState('');
  const [isLoading, setIsLoading] = useState(false); // State variable to track loading state
  const [registrationTime, setRegistrationTime] = useState(null); // State variable to hold registration time
  const navigation = useNavigation();



    // useFocusEffect get called each time when screen comes in focus
    useFocusEffect(
      React.useCallback(() => {
        const onBackPress = () => {
          navigation.navigate('Registration');
          // Return true to stop default back navigaton
          // Return false to keep default back navigaton
          return true;
        };
  
        // Add Event Listener for hardwareBackPress
        BackHandler.addEventListener(
          'hardwareBackPress',
          onBackPress
        );
  
        return () => {
          // Once the Screen gets blur Remove Event Listener
          BackHandler.removeEventListener(
            'hardwareBackPress',
            onBackPress
          );
        };
      }, []),
    );



  const isFormEmpty = !name.trim() || !contactNumber.trim() || !address.trim() || !plateNumber.trim();

  const formatDate = (timestamp) => {
    const date = timestamp.toDate();
    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', timeZoneName: 'short' };
    return date.toLocaleDateString('en-US', options);
  };

  const generateQRCode = async () => {
    if (!isFormEmpty) {
      setIsLoading(true); // Set loading to true when registration starts

      const timestamp = firebase.firestore.Timestamp.now(); // Get current timestamp from Firestore
      const data = {
        name,
        contactNumber,
        address,
        plateNumber,
        registrationTime: timestamp, // Save current time as registration time
      };

      try {
        const driversCollectionRef = firebase.firestore().collection('Drivers');
        const docRef = await driversCollectionRef.add({
          ...data,
          // No need to specify a qrCode field here
        });

        // const qrData = {
        //   ...data,
        //   driverId: docRef.id, // Use the unique ID generated by Firestore
        // };

        const qrData = {
          name,
          contactNumber,
          address,
          plateNumber,
          driverId: docRef.id, // Use the unique ID generated by Firestore
        };

        // Now, add the qrData to the 'Drivers' collection
        await docRef.update({
          qrCode: JSON.stringify(qrData), // Store qrData as a string in Firestore
        });

        setRegistrationTime(timestamp); // Update registration time state
        navigation.navigate('DriverQR', { qrData });
      } catch (error) {
        console.error('Error adding document: ', error);
      } finally {
        setIsLoading(false);
      }
    }
  };

  return (
    <View style={styles.container}>
        <Image source={require('../../../assets/logo.png')} style={styles.logo}/>
      	<Text style={styles.header}>DRIVER REGISTRATION:</Text>
      <Text style={styles.label}>Name:</Text>
      <TextInput
        style={styles.input}
        value={name}
        onChangeText={setName}
        placeholder="Enter your name"
      />
      {/* <Text style={styles.label}>Contact Number:</Text>
      <TextInput
        style={styles.input}
        value={contactNumber}
        onChangeText={setContactNumber}
        placeholder="Enter your contact number"
        keyboardType="phone-pad"
        maxLength={13}
      /> */}

<Text style={styles.label}>Contact Number:</Text>
<TextInput
  style={styles.input}
  value={contactNumber.startsWith("+639") ? contactNumber : "+639" + contactNumber}
  onChangeText={setContactNumber}
  placeholder="Enter your contact number"
  keyboardType="phone-pad"
  maxLength={13}
/>

      <Text style={styles.label}>Address:</Text>
      <TextInput
        style={styles.input}
        value={address}
        onChangeText={setAddress}
        placeholder="Enter your address"
      />
      <Text style={styles.label}>Plate Number:</Text>
      <TextInput
        style={styles.input}
        value={plateNumber}
        onChangeText={setPlateNumber}
        placeholder="Enter your plate number"
      />
      
      {/* <Button  title="Register" onPress={generateQRCode} disabled={isFormEmpty || isLoading} style={styles.registerButton} />
      {isLoading && <ActivityIndicator style={styles.loadingIndicator} size="large" color="#0000ff" />}
      {registrationTime && (
        <Text>Registration Time: {formatDate(registrationTime)}</Text>
        
      )} */}

      {/* <TouchableOpacity
        onPress={generateQRCode} 
        disabled={isFormEmpty || isLoading} 
        style={styles.registerButton}
        activeOpacity={0.8} // Set the opacity when the button is pressed
      >
        <Text style={styles.buttonText}>Register</Text>
        {isLoading && <ActivityIndicator style={styles.loadingIndicator} size="large" color="#0000ff" />}
      


      </TouchableOpacity> */}

<TouchableOpacity
        onPress={generateQRCode}
        disabled={isFormEmpty || isLoading}
        style={styles.registerButton}
        activeOpacity={0.8} // Set the opacity when the button is pressed
      >
        {isLoading ? (
          <ActivityIndicator style={styles.loadingIndicator} size="small" color="#0000ff" />
        ) : (
          <Text style={styles.buttonText}>Register</Text>
        )}
      </TouchableOpacity>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: 40,
    backgroundColor: 'white',
  },
  label: {
    fontSize: 15,
    alignSelf: 'flex-start',
    marginLeft: 10,
    marginBottom:5,
    fontWeight: 'bold',
  },
  input: {
    height: 40,
    width: '100%',
    borderColor: 'black',
    borderWidth: 1,
    marginBottom: 26,
    paddingLeft: 15,
    paddingRight: 15,
    borderRadius: 50,
  },
  loadingIndicator: {
    marginTop: 10,
  },
  logo: {
    width: 210, // Adjust width as needed
    height: 210, // Adjust height as needed
    marginBottom: 60,
    marginTop: -50,
    
  },
  header: {
    fontSize: 20,
    fontWeight: 'bold',
    marginBottom: 20,
    marginTop: -100,
  },
  registerButton: {
    backgroundColor: '#ffd702',
    padding: 10,
    borderRadius: 50,
    borderWidth: 0,
    height: 40,
  //  flex: 1,
    marginLeft: 8,
    marginTop:12,
    alignItems: 'center',
    justifyContent: 'center',
    width:'100%',
    borderWidth:0
  },
});

export default RegistrationForm;
